spring.application.name=${NAME_APPLICATION}
# MySQL
spring.datasource.url=${DATASOURCE_URL}
spring.datasource.username=${DATASOURCE_NAME}
spring.datasource.password=${DATASOURCE_PASSWORD}
spring.datasource.dbcp2.driver-class-name=com.mysql.cj.jdbc.Driver
spring.jpa.database-platform=org.hibernate.dialect.MySQL8Dialect
spring.jpa.hibernate.ddl-auto=update

# Redis
spring.redis.host=${REDIS_HOST}
spring.redis.port=${REDIS_PORT}

# JWT Secret Key
spring.security.jwt.private.key = ${JWT_PRIVATE_KEY}

# Gmail SMTP
spring.mail.host=${MAIL_HOST}
spring.mail.port=${MAIL_PORT}
spring.mail.username=${MAIL_USERNAME}
spring.mail.password=${MAIL_PASSWORD}
spring.mail.properties.mail.smtp.auth=${MAIL_SMTP_AUTH}
spring.mail.properties.mail.smtp.starttls.enable=${MAIL_SMTP_STARTTLS_ENABLE}


# Google OAuth2
spring.security.oauth2.client.registration.google.client-id=${GOOGLE_CLIENT_ID}
spring.security.oauth2.client.registration.google.client-secret=${GOOGLE_CLIENT_SECRET}
spring.security.oauth2.client.registration.google.scope=${GOOGLE_SCOPE}
spring.security.oauth2.client.registration.google.redirect-uri=${GOOGLE_REDIRECT_URL}

#Kafka
spring.kafka.bootstrap-servers=${KAFKA_SERVERS}
spring.kafka.consumer.group-id=${KAFKA_CONSUMER_GROUP_ID}
spring.kafka.consumer.auto-offset-reset=${KAFKA_OFFSET_RESET}

spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer

spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer

spring.kafka.consumer.properties.spring.json.trusted.packages=*
